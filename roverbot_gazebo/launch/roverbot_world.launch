<?xml version="1.0"?>
<launch>

	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!--arg name="world_name" value="$(find roverbot)/roverbot_gazebo/worlds/roverbot_world.world"/-->
		<!--arg name="world_name" value="$(find roverbot)/roverbot_gazebo/worlds/grass_plane.world"/-->
		<arg name="world_name" value="$(find roverbot)/roverbot_gazebo/worlds/TerrenoMonte.world"/>
		<!-- se referencia el lugar donde se encuentran los modelos-->
		<env name="GAZEBO_MODEL_PATH" value="$(find roverbot)/roverbot_gazebo/worlds/models/" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- Load the URDF into the ROS Parameter Server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find roverbot)/roverbot_description/urdf/roverbot.xacro'" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

	<!-- Spawn a roverbot in Gazebo, taking the description from the
	parameter server -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-param robot_description -urdf -model roverbot" />

	<!-- Start rviz visualization with preset config -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find roverbot)/roverbot_gazebo/rviz/roverbot.rviz" required="true" />

	<!-- ros_control roverbot launch file -->
	<include file="$(find roverbot)/roverbot_control/launch/roverbot_control.launch" /> 
</launch>
